# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  # Managed node
  #
  config.vm.define :ubuntu1, primary: true do |ubuntu|
    ubuntu.vm.box = "ubuntu/trusty64"
    ubuntu.vm.hostname = "ubuntu1.local"

    ubuntu.vm.network :private_network, ip: "33.33.33.31"
    ubuntu.vm.network "forwarded_port", guest: 80, host: 8080
    ubuntu.vm.network "forwarded_port", guest: 443, host: 8443

    ubuntu.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
    end

    UBUNTU_SCRIPTS = [ "init-vagrant.sh", "install-vim.sh" ]
    for script_file in UBUNTU_SCRIPTS
      ubuntu.vm.provision "shell", path: script_file
    end

    ubuntu.vm.provision "ansible" do |ansible|
      ansible.playbook = "upgrade-openssl.yml"
      #ansible.sudo = true
      #ansible.verbose = "vvv"
    end
  end

  # Jupyter
  #
  config.vm.define :jupyter, autostart: true do |jupyter|
    jupyter.vm.box = "ubuntu/trusty64"
    jupyter.vm.hostname = "jupyter.local"

    jupyter.vm.network :private_network, ip: "33.33.33.11"
    jupyter.vm.network "forwarded_port", guest: 8888, host: 8888

    jupyter.vm.provider "virtualbox" do |vb|
      vb.memory = "256"
    end
    
    # install jupyter.
    JUPYTER_SCRIPTS = [ "init-vagrant.sh", "init-jupyter.sh" ]
    for script_file in JUPYTER_SCRIPTS
      jupyter.vm.provision "shell", path: script_file
    end

    jupyter.vm.provision "shell", run: "always", inline: <<-SHELL
      ipython notebook --notebook-dir=/vagrant --no-browser --ip=0.0.0.0 &
    SHELL

    # ansible & ssh key
    jupyter.vm.provision "shell", inline: <<-SHELL
      sudo pip install --upgrade ansible
      sudo cp /vagrant/.vagrant/machines/ubuntu1/virtualbox/private_key ~/.ssh/id_rsa
      sudo ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub
    SHELL
  end

end
